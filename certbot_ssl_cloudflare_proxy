#!/bin/bash

# --- BOJE ---
GREEN="\e[32m"
RED="\e[31m"
YELLOW="\e[33m"
BLUE="\e[34m"
NC="\e[0m" # No Color

# --- Cloudflare credentials fajl ---
CLOUDFLARE_CREDENTIALS="/etc/letsencrypt/cloudflare.ini"

# --- Unos Cloudflare API tokena ---
echo -e "${BLUE}Unesite Cloudflare API Token:${NC}"
read CLOUDFLARE_API_TOKEN

# --- Spremanje API tokena u cloudflare.ini ---
echo -e "${YELLOW}Spremam Cloudflare API token u fajl $CLOUDFLARE_CREDENTIALS${NC}"
echo "dns_cloudflare_api_token = $CLOUDFLARE_API_TOKEN" | sudo tee $CLOUDFLARE_CREDENTIALS > /dev/null

# Postavljanje dozvola za sigurnost
sudo chmod 600 $CLOUDFLARE_CREDENTIALS

# --- Unos domene ---
echo -e "${BLUE}Unesi glavnu domenu (npr. primjer.com):${NC}"
read DOMAIN

# --- Prikaz dostupnih webroot direktorija ---
echo -e "\n${BLUE}Pronađeni webroot direktoriji:${NC}"
AVAILABLE_WEBROOTS=()

INDEX=1
for DIR in /var/www/*/ ; do
  echo "[$INDEX] $DIR"
  AVAILABLE_WEBROOTS+=("$DIR")
  ((INDEX++))
done

# --- Izbor webroot direktorija ---
echo -e "\n${BLUE}Unesi broj željenog direktorija sa liste ili upiši puni path ručno:${NC}"
read WEBROOT_CHOICE

if [[ "$WEBROOT_CHOICE" =~ ^[0-9]+$ ]]; then
  if ((WEBROOT_CHOICE > 0 && WEBROOT_CHOICE <= ${#AVAILABLE_WEBROOTS[@]})); then
    WEBROOT="${AVAILABLE_WEBROOTS[$((WEBROOT_CHOICE-1))]}"
  else
    echo -e "${RED}Neispravan izbor broja! Prekidan.${NC}"
    exit 1
  fi
else
  WEBROOT="$WEBROOT_CHOICE"
fi

# --- Provjera webroot direktorija ---
if [ ! -d "$WEBROOT" ]; then
  echo -e "${RED}Direktorij '$WEBROOT' ne postoji! Prekidam.${NC}"
  exit 1
fi

echo -e "${GREEN}Odabrani webroot:${NC} $WEBROOT"

# --- Generisanje SSL certifikata ---
echo -e "\n${YELLOW}Pokrećem certbot za $DOMAIN i www.$DOMAIN...${NC}"
sudo certbot certonly --dns-cloudflare --dns-cloudflare-credentials "$CLOUDFLARE_CREDENTIALS" -d "$DOMAIN" -d "www.$DOMAIN"

if [ $? -ne 0 ]; then
  echo -e "${RED}Greška pri generisanju SSL certifikata! Prekidan.${NC}"
  exit 1
fi

# --- Kreiranje Apache konfiguracije ---
APACHE_CONF="/etc/apache2/sites-available/$DOMAIN.conf"

echo -e "\n${YELLOW}Kreiram Apache konfiguraciju: $APACHE_CONF${NC}"

sudo bash -c "cat > $APACHE_CONF" <<EOF
# Force HTTP to HTTPS and www to non-www redirection

<VirtualHost *:80>
    ServerName $DOMAIN
    ServerAlias www.$DOMAIN
    Redirect permanent / https://$DOMAIN/
</VirtualHost>

<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerName $DOMAIN

    DocumentRoot $WEBROOT

    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/$DOMAIN/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/$DOMAIN/privkey.pem

    Include /etc/letsencrypt/options-ssl-apache.conf

    <Directory $WEBROOT>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    ErrorLog \${APACHE_LOG_DIR}/$DOMAIN-error.log
    CustomLog \${APACHE_LOG_DIR}/$DOMAIN-access.log combined
</VirtualHost>

<VirtualHost *:443>
    ServerName www.$DOMAIN

    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/$DOMAIN/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/$DOMAIN/privkey.pem

    Redirect permanent / https://$DOMAIN/
</VirtualHost>
</IfModule>
EOF

# --- Aktivacija sajta i reload Apache ---
echo -e "\n${YELLOW}Aktiviram sajt i reloadujem Apache...${NC}"

sudo a2ensite "$DOMAIN.conf"

# Test Apache konfiguracije prije reload-a
if sudo apache2ctl configtest | grep -q "Syntax OK"; then
  sudo systemctl reload apache2
  echo -e "${GREEN}Apache reload uspješan!${NC}"
else
  echo -e "${RED}Greška u Apache konfiguraciji! Provjeri ručno.${NC}"
  exit 1
fi

# --- Postavljanje automatskog obnavljanja certifikata ---
echo -e "\n${YELLOW}Provjera cronjob-a za automatski renew SSL certifikata...${NC}"
CRON_EXISTS=$(sudo crontab -l 2>/dev/null | grep -c "certbot renew")

if [ "$CRON_EXISTS" -eq 0 ]; then
  echo -e "${GREEN}Postavljam novi cronjob...${NC}"
  (sudo crontab -l 2>/dev/null; echo "0 3 * * * certbot renew --quiet --deploy-hook 'systemctl reload apache2'") | sudo crontab -
else
  echo -e "${GREEN}Cronjob već postoji. Preskačem.${NC}"
fi

echo -e "\n${GREEN}SVE JE USPJEŠNO ZAVRŠENO!${NC}"
echo -e "${GREEN}Domen: https://$DOMAIN${NC}"
